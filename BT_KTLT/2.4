#include<iostream>
#include<cmath>
using namespace std;
struct	node{
	int info;
	node *next;
};
struct	list{
	node *head, *tail;
};
list l;
node *getnode(int x){
	node *p=new node;
	if(p==NULL)	exit(1);
	p->info=x;
	p->next=NULL;
	return p;
}
void insert_tail(list &l, node *p){
	if(l.head==NULL){
		l.head=p;
		l.tail=p;
	}
	else{
		l.tail->next=p;
		l.tail=p;
	}
}
void list_insert_tail(list &l){
	int n,x;
	cout <<"Nhap so luong phan tu: ";cin>>n;
	for(int i=0;i<n;i++){
		cin>>x;
		insert_tail(l,getnode(x));
	}
}
void list_process(list l){
	node*p=l.head;
	while(p!=NULL){
		cout <<p->info<<" ";
		p=p->next;
	}
}
//caua
void sum(list l){
	int s=0;
	for(node *p=l.head;p!=NULL;p=p->next)
		s=s+p->info;
	cout <<"\nTong cac phan tu: "<<s;
}
//caub
int prime(int n){
	if(n<2)	return 0;
	for(int i=2;i<=sqrt(n);i++)
		if(n%i==0)	return 0;
	return 1;
}
void dem_snt(list l){
	int d=0;
	for(node*p=l.head;p!=NULL;p=p->next)
		if(prime(p->info))	d++;
	cout <<"\nSo luong SNT: "<<d;
}
//cauc
void dem_so_chan(list l){
	int d_ev=0;
	for(node*p=l.head;p!=NULL;p=p->next)
		if(p->info%2==0)	d_ev++;
	cout <<"\nSo luong so chan: "<<d_ev;
}
void dem_so_le(list l){
	int d_od=0;
	for(node*p=l.head;p!=NULL;p=p->next)
		if(p->info%2!=0)	d_od++;
	cout <<"\nSo luong so le: "<<d_od;
}
//caud
void gtln(list l){
	int max=INT_MIN;
	for(node*p=l.head;p!=NULL;p=p->next)
		if(p->info>max)	max=p->info;
	cout <<"\nGTLN: "<<max;
}
//caue
void xoa_dau(list &l){
	node *p=l.head;
	if(p!=NULL){
		l.head=l.head->next;
		delete(p);
	}
	else	l.tail=NULL;
}
int main(){
	list_insert_tail(l);
	list_process(l);
	sum(l);
	dem_snt(l);
	dem_so_chan(l);
	dem_so_le(l);
	gtln(l);
	cout<<"\nMang sau khi xoa phan tu dau: ";
	xoa_dau(l);
	list_process(l);
	return 0;
}