#include<iostream>
using namespace std;
struct	node{
	int info;
	node *next;
};
struct	list{
	node *head, *tail;
};
list l;
node *getnode(int x){
	node *p=new node;
	if(p==NULL)	exit(1);
	p->info=x;
	p->next=NULL;
	return p;
}
void insert_tail(list &l, node *p){
	if(l.head==NULL){
		l.head=p;
		l.tail=p;
	}
	else{
		l.tail->next=p;
		l.tail=p;
	}
}
void list_insert_tail(list &l){
	int n,x;
	cout <<"Nhap so luong phan tu: ";	cin>>n;
	for(int i=0;i<n;i++){
		cin>>x;
		insert_tail(l,getnode(x));
	}
}
void list_process(list l){
	node *p=l.head;
	while(p!=NULL){
		cout <<p->info<<" ";
		p=p->next;
	}
}
int find_k(list l, int k){
	for(node *p=l.head;p!=NULL;p=p->next)
		if(p->info==k)	return 1;
	return 0;
}
void result(list l, int k){
	if(find_k(l,k))	cout <<"\nTim thay phan tu trong danh sach";
	else	cout <<"\nKhong tim thay phan tu trong danh sach";
}
void sap_xep(list &l){
	node *p, *q;
	int temp;
	for(p=l.head;p!=NULL;p=p->next){
		node *minnode=p;
		for(q=p->next;q!=NULL;q=q->next)
			if(q->info<minnode->info)	minnode=q;
		if(minnode!=p){
			temp=p->info;
			p->info=minnode->info;
			minnode->info=temp;
		}
	}
}
int main(){
	list_insert_tail(l);
	list_process(l);
	int k;
	cout <<"\nNhap gia tri k can tim: ";	cin>>k;
	find_k(l,k);
	result(l,k);
	cout <<"\nDanh sach sau khi sap theo chieu tang dan: ";
	sap_xep(l);
	list_process(l);
	return 0;
}