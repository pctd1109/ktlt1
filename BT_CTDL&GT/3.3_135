#include<iostream>
#include<cmath>
using namespace std;
struct	node{
	int info;
	node *next;
};
struct	list{
	node *head, *tail;
};
list l;
list l1, l2;
list l_ev, l_od;
node *getnode(int x){
	node *p=new node;
	if(p==NULL)	exit(1);
	p->info=x;
	p->next=NULL;
	return p;
}
void insert_tail(list &l, node *p){
	if(l.head==NULL){
		l.head=p;
		l.tail=p;
	}
	else{
		l.tail->next=p;
		l.tail=p;
	}
}
void list_insert_tail(list&l){
	int x,n;
	cout <<"Nhap so luong phan tu: ";cin>>n;
	for(int i=1;i<=n;i++){
		cin>>x;
		insert_tail(l,getnode(x));
	}
}
void list_process(list l){
	node *p=l.head;
	while(p!=NULL){
		cout<<p->info<<" ";
		p=p->next;
	}
}
int prime(int n){
	if(n<2)	return 0;
	for(int i=2;i<=sqrt(n);i++)
		if(n%i==0)	return 0;
	return 1;
}
void split_list(list l, list &l1){
	for(node*p=l.head;p!=NULL;p=p->next)
		if(prime(p->info))
			insert_tail(l1,getnode(p->info));
}
void split_list2(list l, list &l_ev, list &l_od){
	for(node*p=l.head;p!=NULL;p=p->next){
		if(p->info%2==0)
			insert_tail(l_ev,getnode(p->info));
		else
			insert_tail(l_od,getnode(p->info));
	}
}
int main(){
	list_insert_tail(l);
	list_process(l);
	split_list(l,l1);
	cout <<"\nDanh sach L1 gom cac SNT sau khi tach tu L: ";
	list_process(l1);
	split_list2(l,l_ev,l_od);
	cout <<"\nDanh sach L_ev gom cac so chan khi tach tu L: ";
	list_process(l_ev);
	cout <<"\nDanh sach L_od gom cac so le khi tach tu L: ";
	list_process(l_od);
	return 0;
}