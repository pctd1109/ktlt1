#include<iostream>
#define maxn 1000
using namespace std;
void nhap(int a[], int &n){
	cout <<"Nhap so luong phan tu: ";cin>>n;
	for(int i=0;i<n;i++)
		cin>>a[i];
}
void xuat(int a[], int n){
	for(int i=0;i<n;i++)
		cout <<a[i]<<" ";
}
void exch(int &a, int &b){
	int temp=a;
	a=b;
	b=temp;
}
void SelectionSort(int a[], int n){
	for(int i=0;i<n-1;i++){
		int min=i;
		for(int j=i+1;j<n;j++)
			if(a[j]<a[min])	min=j;
		if(min!=i)	exch(a[min],a[i]);
	}
}
void InsertionSort(int a[], int n){
	int pos,x;
	for(int i=1;i<n;i++){
		x=a[i];
		pos=i-1;
		while(pos>=0&&a[pos]>x){
			a[pos+1]=a[pos];
			pos--;
		}
		a[pos+1]=x;
	}
}
void BubbleSort(int a[], int n){
	for(int i=0;i<n-1;i++)
		for(int j=n-1;j>i;j--)
			if(a[j]<a[j-1])	exch(a[j],a[j-1]);
}
void QuickSort(int a[], int left, int right){
	int i,j,x;
	if(left>=right)	return;
	i=left;	j=right;
	x=a[(left+right)/2];
	do{
		while(a[i]<x)	i++;
		while(a[j]>x)	j--;
		if(i<=j){
			exch(a[i],a[j]);
			i++;	j--;
		}
	}while(i<j);
	if(left<j)	QuickSort(a,left,j);
	if(right>i)	QuickSort(a,i,right);
}
void Merge(int a[], int l, int m, int r){
	int *c=new int[r-l+1];
	int i=l,j=m+1,k=0;
	while(i<=m&&j<=r)
		if(a[i]<a[j])
			c[k++]=a[i++];
		else
			c[k++]=a[j++];
	while(i<=m)	c[k++]=a[i++];
	while(j<=r)	c[k++]=a[j++];
	k=0;
	for(i=l;i<=r;i++)
		a[i]=c[k++];
	delete c;
}
void MergeSort(int a[], int l, int r){
	if(l<r){
		int m=(l+r)/2;
		MergeSort(a,l,m);
		MergeSort(a,m+1,r);
		Merge(a,l,m,r);
	}
}
int main(){
	int a[maxn], n;
	nhap(a,n);
	xuat(a,n);
	cout <<"\nMang sau khi sap xep theo thu tu tang dan: ";
	MergeSort(a,0,n-1);
	xuat(a,n);
	return 0;
}