#include<iostream>
using namespace std;
struct	node{
	int info;
	node *left, *right;
};
typedef node *tree;
int insert_BST(tree &root, int k){
	if(root!=NULL){
		if(root->info==k)	return 0;
		if(root->info>k)	return insert_BST(root->left,k);
		else	return insert_BST(root->right,k);
	}
	else{
		root=new node;
		if(root==NULL)	return -1;
		root->info=k;
		root->left=root->right=NULL;
		return 1;
	}
}
void tao_BST(tree &root){
	int k,n;
	cout <<"Nhap so luong phan tu: "; cin>>n;
	root=NULL;
	for(int i=1;i<=n;i++){
		cin>>k;
		insert_BST(root,k);
	}
}
void LNR(tree root){
	if(root!=NULL){
		LNR(root->left);
		cout <<root->info<<" ";
		LNR(root->right);
	}
}
int sumof_BST(tree root){
	if(root==NULL)	return 0;
	else	return root->info+sumof_BST(root->left)+sumof_BST(root->right);
}
int main(){
	tree root;
	tao_BST(root);
	int sum=0;
	LNR(root);
	cout <<"\nTong cac phan tu: "<<sumof_BST(root);
	return 0;
}